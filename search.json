[{"path":"https://yzohdy.github.io/BioNetworks/articles/BioNetworks_vignette.html","id":"bionetworks","dir":"Articles","previous_headings":"","what":"BioNetworks","title":"BioNetworks_vignette","text":"goal BioNetworks analyze biological networks using graph theory concepts","code":""},{"path":"https://yzohdy.github.io/BioNetworks/articles/BioNetworks_vignette.html","id":"installation","dir":"Articles","previous_headings":"BioNetworks","what":"Installation","title":"BioNetworks_vignette","text":"can install development version BioNetworks : (new)","code":"library(devtools) devtools::install_github(\"yzohdy/BioNetworks\")"},{"path":"https://yzohdy.github.io/BioNetworks/articles/BioNetworks_vignette.html","id":"example","dir":"Articles","previous_headings":"BioNetworks","what":"Example","title":"BioNetworks_vignette","text":"basic example shows anaylze set differentially expressed genes (DEGs) proteins:","code":"library(BioNetworks) ## basic example code"},{"path":"https://yzohdy.github.io/BioNetworks/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Youssef M Zohdy. Maintainer.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zohdy YM (2024). BioNetworks: Biological Networks Analysis. R package version 1.0.0, https://yzohdy.github.io/BioNetworks/, https://github.com/yzohdy/BioNetworks.","code":"@Manual{,   title = {BioNetworks: Biological Networks Analysis},   author = {Youssef M Zohdy},   year = {2024},   note = {R package version 1.0.0, https://yzohdy.github.io/BioNetworks/},   url = {https://github.com/yzohdy/BioNetworks}, }"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"bionetworks","dir":"","previous_headings":"","what":"Biological Networks Analysis","title":"Biological Networks Analysis","text":"goal BioNetworks analyze biological networks using graph theory concepts.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Biological Networks Analysis","text":"Install Beta version BioNetworks:","code":"library(devtools) devtools::install_github(\"yzohdy/BioNetworks\")"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Biological Networks Analysis","text":"basic example shows analyze set differential expressed genes (DEGs) proteins.following example outlines use package identify set DEGs microarray dataset. However, package still work RNA-Seq proteomics data.","code":"library(BioNetworks)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_1--identification-of-differentially-expressed-genes-or-proteins","dir":"","previous_headings":"","what":"1- Identification of differentially expressed genes or proteins","title":"Biological Networks Analysis","text":"following function used simply extract list DEGs normalized microarray dataset. using RNA-Seq data, simply use DESeq2 similiar packages identify DEGs.","code":"#Identification of DEGs from a normalized Nanostring dataset (nano.counts) DEG <- microarray_degs(data = nano.counts, control = \"CTL\", condition = \"RX\")  #Functional annotation of the identifed DEGs DEG.fun <- degs_f_annotation(DEG, species = \"Hs\")"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_2--genes-co-expression","dir":"","previous_headings":"","what":"2- Genes co-expression","title":"Biological Networks Analysis","text":"constructing interaction network, use either following functions compute co-expression score genes present within dataser.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_21--pearson-correlation","dir":"","previous_headings":"2- Genes co-expression","what":"2.1- Pearson correlation","title":"Biological Networks Analysis","text":"gene_coexpression_r() function simply uses pearson correlation score strength co-expression different genes.","code":"p.coexpr.df <- genes_coexpression_r(nano.counts)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_22--scaled-coexpression","dir":"","previous_headings":"2- Genes co-expression","what":"2.2- Scaled coexpression","title":"Biological Networks Analysis","text":"Another available method calculating co-expression values using WGCNA package correlation powered analysis. function genes_coexpression() offers easy way using method.","code":"s.coexpr.df <- genes_coexpression(nano.counts)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_3--interaction-network-construction","dir":"","previous_headings":"","what":"3- Interaction network construction","title":"Biological Networks Analysis","text":"Next construction interaction network pre-identified DEGs.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_31-identification-of-node-interactions","dir":"","previous_headings":"3- Interaction network construction","what":"3.1-Identification of node interactions.","title":"Biological Networks Analysis","text":"First create interaction dataframe using pre-identified interaction STRING database.","code":"#Identifying interactions int.df <- ident_interactions(DEG, species = \"Hs\")  #Merging interactions with computed co-expression scores full_int.df <- merge_int_expr(int.df,s.coexpr.df, int_cols = c(\"from\",\"to\"),coexpr_cols = c(\"Var1\", \"Var2\"))"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_32---construction-and-visulization-of-network","dir":"","previous_headings":"3- Interaction network construction","what":"3.2 - Construction and visulization of network","title":"Biological Networks Analysis","text":"network constructed node corresponding gene edge represents nodal interaction weighted co-expression values.","code":"#Network construction study.net <- construct_network(full_int.df, interaction_score = \"Freq\")  #Visualize network with Cytoscape - make sure Cytoscape app is open before running this function visualize_net(study.net)"},{"path":[]},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_41--checking-the-presence-of-a-scale-free-network-topology","dir":"","previous_headings":"4- Graph theory analysis","what":"4.1- Checking the presence of a scale-free network topology","title":"Biological Networks Analysis","text":"Almost biological networks exhibit scale-free topology centeral highly connected nodes decrease connectivity network periphery, show power-law distribution node degrees.","code":"plot_degrees_dist(study.net)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_42--construction-of-random-networks","dir":"","previous_headings":"4- Graph theory analysis","what":"4.2- Construction of random networks","title":"Biological Networks Analysis","text":"cornerstone comparing topology network comparing sets randomly constructed network. construct_rand_net() constructs list random networks similar weighted degree distribution based Fabien Viger Matthieu Latapy’s algorithm.","code":"rand.nets <- construct_rand_net(study.net, number = 100)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_43--clustering-coefficient","dir":"","previous_headings":"4- Graph theory analysis","what":"4.3- Clustering coefficient","title":"Biological Networks Analysis","text":"compare clustering coefficient study network randomly constructed networks ensure presence scale-free network.","code":"#Calculate the clustering coefficient for the study networks net.clu.coeff <- net_clu_coeff(study.net)  #Calculate the clustering coefficient for the random networks rand.clu.coeff <- rand_net_clu_coeff(rand.nets)  #One sample t-test between random networks clustering coefficient and the study network clu.coeff.t.test <- t.test(rand.clu.coeff, mu= net.clu.coeff)"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_44--rich-club-analysis","dir":"","previous_headings":"4- Graph theory analysis","what":"4.4- Rich-club analysis","title":"Biological Networks Analysis","text":"‘rich-club’ phenomenon refers tendency nodes high centrality, dominant elements network, form tightly interconnected subnetworks, one crucial properties accounting formation scale-free biological network. following functions demonstrate identification network core nodes using rich-club analysis. compare_rc_coeff() function calculates rich-club coefficient study network list random networks calculates normalized coefficient. normalized coefficient used set cut-identify ndoes highest degrees connectivity.","code":"#Calculating rich-club coefficient rc.coeff.df <- compare_rc_coeff(study.net, rand.nets)  #Identify core nodes core.nodes <- rc_nodes(study.net, rc.coeff.df)  #Visualizing the identify core nodes visualize_net(core.nodes)  #Comparing the nodal degrees between the core nodes and other network nodes compare_rc_degrees(study.net, core.nodes)  #Functional annotation of the core nodes - fix!! core.fun <- degs_f_annotation(core.nodes, species = \"Hs\")"},{"path":"https://yzohdy.github.io/BioNetworks/index.html","id":"id_5--correlation-between-core-nodes-and-traits","dir":"","previous_headings":"","what":"5- Correlation between core nodes and traits","title":"Biological Networks Analysis","text":"investigate correlation identified core nodes traits. Correlation made based PCA compute eigengenes core nodes. correlation compared multiple iterations random sampling non-core nodes.","code":"#Calculate core nodes eigengenes core.nodes.eg <- core_eigengenes(nano.counts,study.net,core.nodes)  #Calculate the non-core nodes eigengenes noncore.nodes.eg <- non_core_eigengenes(nano.counts, study_network, core.nodes, number =100)  #Correlate with specific trait core.correlation <- core_nodes_correlation(core.nodes.eg, noncore.nodes.eg, outcomes.df, tested_outcome = \"survival\")"},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_core_nodes_degrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","title":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","text":"Comparing degrees Rich-club non-Rich-club genes","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_core_nodes_degrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","text":"","code":"compare_core_nodes_degrees(study_network, rc_network)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_core_nodes_degrees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","text":"study_network study network igraph object rc_network rich-club network igraph object","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_core_nodes_degrees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","text":"Dataframe degrees","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_core_nodes_degrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparing the degrees between Rich-club and non-Rich-club genes — compare_core_nodes_degrees","text":"","code":"compare_core_nodes_degrees(study_network, rc_network) #> Error in eval(expr, envir, enclos): object 'rc_network' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_rc_coeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rich club coefficient — compare_rc_coeff","title":"Calculate rich club coefficient — compare_rc_coeff","text":"function calculates rich club coefficient study network compares list random networks.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_rc_coeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rich club coefficient — compare_rc_coeff","text":"","code":"compare_rc_coeff(study_net, rand_nets = list(), weighted = F)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_rc_coeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rich club coefficient — compare_rc_coeff","text":"study_net Study network rand_nets list random networks weighted option calculate edge weighted unweighted rich-club coefficient","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_rc_coeff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rich club coefficient — compare_rc_coeff","text":"Average rich club coefficient list networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/compare_rc_coeff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate rich club coefficient — compare_rc_coeff","text":"","code":"compare_rc_coeff(study_net,rand_nets= list(),weighted= F) #> Error in compare_rc_coeff(study_net, rand_nets = list(), weighted = F): The argument 'rand_nets' is empty. Please provide a list of random networks. #>          Use the construct_rand_net() function."},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct interactive network — construct_network","title":"Construct interactive network — construct_network","text":"function constructs interactive network using pre-identified interactions co-epxression values.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct interactive network — construct_network","text":"","code":"construct_network(network.df, interaction_score = \"col_name\")"},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct interactive network — construct_network","text":"network.df dataframe interacting genes/proteins columns 1 2. additional column interaction strength (e.g. co-expression values) interaction_score Name column containing interaction scores","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct interactive network — construct_network","text":"Returns interactive network","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct interactive network — construct_network","text":"","code":"construct_network(network.df, interaction_column =\"Correlation_r\") #> Error in construct_network(network.df, interaction_column = \"Correlation_r\"): unused argument (interaction_column = \"Correlation_r\")"},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_rand_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Construction of random networks — construct_rand_net","title":"Construction of random networks — construct_rand_net","text":"Construction random networks similar weighted degree distribution based Fabien Viger Matthieu Latapy algorithm.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_rand_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construction of random networks — construct_rand_net","text":"","code":"construct_rand_net(study_network, number = 100)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_rand_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construction of random networks — construct_rand_net","text":"network igraph network object","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_rand_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construction of random networks — construct_rand_net","text":"Visualize degrees distribution interaction network","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/construct_rand_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construction of random networks — construct_rand_net","text":"","code":"construct_rand_net(study_network, number = 100) #> Error in eval(expr, envir, enclos): object 'study_network' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_eigengenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rich-club nodes eigengenes — core_eigengenes","title":"Calculate rich-club nodes eigengenes — core_eigengenes","text":"Calculate rich-club nodes eigengenes","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_eigengenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rich-club nodes eigengenes — core_eigengenes","text":"","code":"core_eigengenes(data, study_network, rc_network)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_eigengenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rich-club nodes eigengenes — core_eigengenes","text":"data microarray counts dataframe rownames genes observations columns study_network study network igraph object rc_network rich-club network igraph object","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_eigengenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rich-club nodes eigengenes — core_eigengenes","text":"Dataframe degrees","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_eigengenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate rich-club nodes eigengenes — core_eigengenes","text":"","code":"core_eigengenes(study_network, rc_network) #> Error in core_eigengenes(study_network, rc_network): argument \"rc_network\" is missing, with no default"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify rich-club nodes in a network — core_nodes","title":"Identify rich-club nodes in a network — core_nodes","text":"function identifies rich-club nodes (hubs) using pre-computed rich-club coefficients sutdy network random networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify rich-club nodes in a network — core_nodes","text":"","code":"core_nodes(study_network, rc_coeff.df, weighted = F)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify rich-club nodes in a network — core_nodes","text":"study_network study network igraph object rc_coeff.df dataframe containing calculated rich-club coefficients study network random networks, along normalized values. Calculated using compare_rc_coeff() function. weighted option calculate edge weighted unweighted rich-club coefficient","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify rich-club nodes in a network — core_nodes","text":"Network hub nodes","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify rich-club nodes in a network — core_nodes","text":"","code":"core_nodes(study_network,rc_coeff.df,weighted=F) #> Error in eval(expr, envir, enclos): object 'rc_coeff.df' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the correlation between Rich-club genes expression versus non-Rich-club genes with outcomes — core_nodes_correlation","title":"Compare the correlation between Rich-club genes expression versus non-Rich-club genes with outcomes — core_nodes_correlation","text":"Compare correlation Rich-club genes expression versus non-Rich-club genes outcomes, using GLM model PCA 1, 2 3.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the correlation between Rich-club genes expression versus non-Rich-club genes with outcomes — core_nodes_correlation","text":"","code":"core_nodes_correlation(   rc_eigengenes.df,   non_rc_eigengenes.df,   outcomes.df,   tested_outcome )"},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the correlation between Rich-club genes expression versus non-Rich-club genes with outcomes — core_nodes_correlation","text":"rc_eigengenes.df Cacluated using rc_eigengenes() function non_rc_eigengenes.df Cacluated using non_rc_eigengenes() function outcomes.df outcomes dataframe observations tested_outcome outcome outcomes.df tested","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/core_nodes_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare the correlation between Rich-club genes expression versus non-Rich-club genes with outcomes — core_nodes_correlation","text":"Predictions","code":""},{"path":[]},{"path":"https://yzohdy.github.io/BioNetworks/reference/degs_f_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"DEGs functional annotations — degs_f_annotation","title":"DEGs functional annotations — degs_f_annotation","text":"function functionally annotates identifed DEGs using Gene ontology analysis (biological processes, cellular components molecular functions)","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/degs_f_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DEGs functional annotations — degs_f_annotation","text":"","code":"degs_f_annotation(genes, species = c(\"Hs\", \"Mm\"))"},{"path":"https://yzohdy.github.io/BioNetworks/reference/degs_f_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DEGs functional annotations — degs_f_annotation","text":"genes Gene symbols control beginning label control observations e.g. CTL (: CTL.1, CTL.2,..) condition beginning label condition observations e.g. Rx (: Rx.1, Rx.2,..)","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/degs_f_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DEGs functional annotations — degs_f_annotation","text":"dataframe Gene Ontology","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/degs_f_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DEGs functional annotations — degs_f_annotation","text":"","code":"degs_f_annotation(genes=genes, species = \"Hs\") #> Error in eval(expr, envir, enclos): object 'genes' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes co-expression using Pearson correlation — genes_coexpression_r","title":"Genes co-expression using Pearson correlation — genes_coexpression_r","text":"function calculated genes co-expression using pearson's correlation r value","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes co-expression using Pearson correlation — genes_coexpression_r","text":"","code":"genes_coexpression_r(data = data)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genes co-expression using Pearson correlation — genes_coexpression_r","text":"data microarray counts table","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_r.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genes co-expression using Pearson correlation — genes_coexpression_r","text":"dataframe gene-gene co-expression pearson's r","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes co-expression using Pearson correlation — genes_coexpression_r","text":"","code":"genes_coexpression_r(data = data) #> Error in t.default(data): argument is not a matrix"},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Genes co-expression using WGCNA — genes_coexpression_s","title":"Genes co-expression using WGCNA — genes_coexpression_s","text":"function calculated genes co-expression using WGCNA soft-power adjusted adjacency matrix","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Genes co-expression using WGCNA — genes_coexpression_s","text":"","code":"genes_coexpression_s(data = data)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Genes co-expression using WGCNA — genes_coexpression_s","text":"data microarray counts table","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Genes co-expression using WGCNA — genes_coexpression_s","text":"dataframe gene-gene co-expression score","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/genes_coexpression_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Genes co-expression using WGCNA — genes_coexpression_s","text":"","code":"genes_coexpression_s(data = data) #> Error in if (nGenes < 3) {    stop(\"The input data data contain fewer than 3 rows (nodes).\",         \"\\nThis would result in a trivial correlation network.\")}: argument is of length zero"},{"path":"https://yzohdy.github.io/BioNetworks/reference/ident_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify interactions — ident_interactions","title":"Identify interactions — ident_interactions","text":"function constructs gene/protein interactive network using interactions STRING-database","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/ident_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify interactions — ident_interactions","text":"","code":"ident_interactions(genes_list, species = c(\"Hs\", \"Mm\"), score_threshold = 200)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/ident_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify interactions — ident_interactions","text":"data microarray counts table","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/ident_interactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify interactions — ident_interactions","text":"dataframe gene-gene interactions","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/ident_interactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify interactions — ident_interactions","text":"","code":"ident_interactions(genes_list,species= \"Hs\", score_threshold=200) #> Error in eval(expr, envir, enclos): object 'genes_list' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/merge_int_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge gene interaction and co-expression data — merge_int_expr","title":"Merge gene interaction and co-expression data — merge_int_expr","text":"function merges gene interaction co-expression data. Function adjust case sensitivity needed.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/merge_int_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge gene interaction and co-expression data — merge_int_expr","text":"","code":"merge_int_expr(   gene_int.df,   gene.coexpr.df,   int_cols = c(\"int.col1\", \"int.col2\"),   coexpr_cols = c(\"exp.col1\", \"exp.col2\") )"},{"path":"https://yzohdy.github.io/BioNetworks/reference/merge_int_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge gene interaction and co-expression data — merge_int_expr","text":"gene_int.df dataframe genes interactions int_cols names two gene names columns gene_int.df gene_coexpr dataframe genes co-expression score expr_cols names two gene names columns gene_coexpr.df","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/merge_int_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge gene interaction and co-expression data — merge_int_expr","text":"dataframe gene-gene co-expression score","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/merge_int_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge gene interaction and co-expression data — merge_int_expr","text":"","code":"merge_int_expr(gene_int.df,gene.coexpr.df, int_cols= c(\"gene1\",\"gene2\"),  expr_cols=c(\"Var1\",\"Var2\")) #> Error in merge_int_expr(gene_int.df, gene.coexpr.df, int_cols = c(\"gene1\",     \"gene2\"), expr_cols = c(\"Var1\", \"Var2\")): unused argument (expr_cols = c(\"Var1\", \"Var2\"))"},{"path":"https://yzohdy.github.io/BioNetworks/reference/microarray_degs.html","id":null,"dir":"Reference","previous_headings":"","what":"Microarray DEGs — microarray_degs","title":"Microarray DEGs — microarray_degs","text":"function identifies differentially expressed genes (DEGs) microarray data","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/microarray_degs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Microarray DEGs — microarray_degs","text":"","code":"microarray_degs(data, control, condition)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/microarray_degs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Microarray DEGs — microarray_degs","text":"data Microarray counts table observations columns genes rows gene names row-names control beginning label control observations e.g. CTL (: CTL.1, CTL.2,..) condition beginning label condition observations e.g. Rx (: Rx.1, Rx.2,..)","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/microarray_degs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Microarray DEGs — microarray_degs","text":"Returns names DEGs","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/microarray_degs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Microarray DEGs — microarray_degs","text":"","code":"microarray_DEGS(data= data, control =\"CTL\",condition= \"Rx\") #> Error in microarray_DEGS(data = data, control = \"CTL\", condition = \"Rx\"): could not find function \"microarray_DEGS\""},{"path":"https://yzohdy.github.io/BioNetworks/reference/net_clu_coeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cluster-coefficient for a networks — net_clu_coeff","title":"Calculate cluster-coefficient for a networks — net_clu_coeff","text":"Calculate cluster-coefficient graph","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/net_clu_coeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cluster-coefficient for a networks — net_clu_coeff","text":"","code":"net_clu_coeff(study_networks)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/net_clu_coeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cluster-coefficient for a networks — net_clu_coeff","text":"study_network networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/net_clu_coeff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cluster-coefficient for a networks — net_clu_coeff","text":"Visualize degrees distribution interaction network","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/net_clu_coeff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cluster-coefficient for a networks — net_clu_coeff","text":"","code":"net_clu_coeff(rand_networks) #> Error in eval(expr, envir, enclos): object 'rand_networks' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/non_core_eigengenes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","title":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","text":"Calculate non-rich-club nodes eigengenes multiple different sampling network node sets similar number rich-club nodes","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/non_core_eigengenes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","text":"","code":"non_core_eigengenes(data, study_network, rc_network, number = 100)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/non_core_eigengenes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","text":"data microarray counts dataframe rownames genes observations columns study_network study network igraph object rc_network rich-club network igraph object number number sampling iterations perform","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/non_core_eigengenes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","text":"Dataframe degrees","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/non_core_eigengenes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate non-rich-club nodes eigengenes — non_core_eigengenes","text":"","code":"non_core_eigengenes(study_network, rc_network) #> Error in non_core_eigengenes(study_network, rc_network): argument \"rc_network\" is missing, with no default"},{"path":"https://yzohdy.github.io/BioNetworks/reference/plot_degrees_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot network degrees distribution — plot_degrees_dist","title":"Plot network degrees distribution — plot_degrees_dist","text":"function visualizes degrees distribution interaction network, ensure scale-free network topology power-law degrees distribution.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/plot_degrees_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot network degrees distribution — plot_degrees_dist","text":"","code":"plot_degrees_dist(network)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/plot_degrees_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot network degrees distribution — plot_degrees_dist","text":"network igraph network object","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/plot_degrees_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot network degrees distribution — plot_degrees_dist","text":"Visualize degrees distribution interaction network","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/plot_degrees_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot network degrees distribution — plot_degrees_dist","text":"","code":"plot_degrees_dist(network) #> Error in eval(expr, envir, enclos): object 'network' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_net_clu_coeff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","title":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","text":"Calculate cluster-coefficient random graph","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_net_clu_coeff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","text":"","code":"rand_net_clu_coeff(rand_networks)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_net_clu_coeff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","text":"rand_networks list random networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_net_clu_coeff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","text":"Visualize degrees distribution interaction network","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_net_clu_coeff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cluster-coefficient for a lists of random networks — rand_net_clu_coeff","text":"","code":"rand_net_clu_coeff(rand_networks) #> Error in eval(expr, envir, enclos): object 'rand_networks' not found"},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_nets_rc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","title":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","text":"Calculate average rich club coefficient list networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_nets_rc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","text":"","code":"rand_nets_rc(rand_nets, weighted = F)"},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_nets_rc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","text":"weighted option calculate edge weighted unweighted rich-club coefficient rand_networks list random networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_nets_rc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","text":"Average rich club coefficient list networks","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/rand_nets_rc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate average rich club coefficient for a list of networks — rand_nets_rc","text":"","code":"rand_net_clu(rand_networks) #> Error in rand_net_clu(rand_networks): could not find function \"rand_net_clu\""},{"path":"https://yzohdy.github.io/BioNetworks/reference/visualize_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize interactive network — visualize_net","title":"Visualize interactive network — visualize_net","text":"function visualizes interaction network Cytoscape. Must Cytoscape application open using function.","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/visualize_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize interactive network — visualize_net","text":"","code":"visualize_net(network, Dysregulation = \"other\", title = \"Interaction Network\")"},{"path":"https://yzohdy.github.io/BioNetworks/reference/visualize_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize interactive network — visualize_net","text":"network igraph network object","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/visualize_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize interactive network — visualize_net","text":"Returns interactive network visualized Cytoscape","code":""},{"path":"https://yzohdy.github.io/BioNetworks/reference/visualize_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize interactive network — visualize_net","text":"","code":"visualize_net(network) #> Error in eval(expr, envir, enclos): object 'network' not found"}]
